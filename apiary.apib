FORMAT: 1A

# IOT API

The API for the EatBacon IOT project

## Gists Collection [/gists{?since}]
Collection of all Gists.

### List All Gists [GET]
+ Parameters
    + since (optional, string) ... Timestamp in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ` Only gists updated at or after this time are returned.

+ Response 200 (application/json;charset=utf-8)

### Create a Gist [POST]
To create a new Gist simply provide a JSON hash of the *description* and *content* attributes for the new Gist. 

+ Request (application/json)
    + Attributes
        + descripton: `sth sth` (string, required)
        + content: `here goess content` (string, required)

+ Response 201 (application/json;charset=utf-8)

## Group Device

### /devices{?skip,limit}

#### GET

+ Parameters

    + skip: aaa-bbb-ccc (optional, string) - Comma-separated list of device ids to skip

    + limit (optional, number) - Maximum devices count to be returned
        + Default: 10

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

+ Response 200 (application/json;charset=utf-8)

    All the devices

    + Body

            [
              "http://10.0.0.1:8080",
              "http://10.0.0.2:80",
              "http://10.0.0.3:8888"
            ]

    + Schema

            {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri",
                "example": "http://10.0.0.225:8080"
              }
            }

#### POST

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

            {
              "id": "0729a580-2240-11e6-9eb5-0002a5d5c51b",
              "uri": "http://10.0.0.220:8080"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "uri": {
                  "type": "string",
                  "format": "uri",
                  "example": "http://10.0.0.220:8080"
                },
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "0729a580-2240-11e6-9eb5-0002a5d5c51b"
                }
              }
            }

+ Response 200 (application/json;charset=utf-8)

    successfully registered device

    + Body

## Group Z-Wave

### /lighting/dimmers/{deviceId}/{value}

#### POST

+ Parameters

    + deviceId: dimmer-1 (required)

    + value: 30 (required)

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

+ Response 200 (application/json;charset=utf-8)

    response

    + Body

            {
              "code": 0,
              "message": "everything is ok"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string",
                  "example": "everything is ok"
                }
              }
            }

#### POST /lighting/dimmers/{deviceId}/{value}/timer/{timeunit}

sets a dimmer to a specific value on a timer

+ Parameters

    + deviceId: dimmer-1 (required)

    + value: 25 (required)

    + timeunit: 100 (required)

    + units: seconds,minutes,milliseconds

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

+ Response 200 (application/json;charset=utf-8)

    response

    + Body

            {
              "code": 0,
              "message": "everything is ok"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string",
                  "example": "everything is ok"
                }
              }
            }

### /lighting/switches/{deviceId}

#### GET

+ Parameters

    + deviceId: lamp (required)

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

+ Response 200 (application/json;charset=utf-8)

    response

    + Body

            {
              "level": 0,
              "lastUpdate": "2000-01-23T09:10:11.456Z",
              "name": "name",
              "id": "id"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "lastUpdate": {
                  "type": "string",
                  "format": "date-time"
                },
                "level": {
                  "type": "integer"
                }
              }
            }

### /lighting/switches/{deviceId}/{value}

#### POST

+ Parameters

    + deviceId: switch-1 (required)

    + value: true,false (required)

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

+ Response 200 (application/json;charset=utf-8)

    response

    + Body

            {
              "code": 0,
              "message": "everything is ok"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string",
                  "example": "everything is ok"
                }
              }
            }

### /lighting/switches/{deviceId}/{value}/timer/{minutes}

#### POST

sets a switch to a specific value on a timer

+ Parameters

    + deviceId: switch-2 (required)

    + value: true,false (required)

    + minutes: 45 (required)

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

+ Response 200 (application/json;charset=utf-8)

    response

    + Body

            {
              "code": 0,
              "message": "everything is ok"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer"
                },
                "message": {
                  "type": "string",
                  "example": "everything is ok"
                }
              }
            }

### /lightingSummary

#### GET

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

+ Response 200 (application/json;charset=utf-8)

    ok

    + Body

            {
              "zoneStatus": [
                {
                  "level": 6,
                  "lastUpdate": "2000-01-23T04:56:07.000+00:00",
                  "name": "name",
                  "id": "id"
                },
                {
                  "level": 6,
                  "lastUpdate": "2000-01-23T04:56:07.000+00:00",
                  "name": "name",
                  "id": "id"
                }
              ],
              "zones": [
                {
                  "deviceType": "dimmer",
                  "zone": "zone",
                  "name": "name",
                  "id": "id",
                  "deviceId": 0
                },
                {
                  "deviceType": "dimmer",
                  "zone": "zone",
                  "name": "name",
                  "id": "id",
                  "deviceId": 0
                }
              ]
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "deviceId": {
                        "type": "integer"
                      },
                      "deviceType": {
                        "type": "string",
                        "enum": [
                          "dimmer",
                          "switch"
                        ]
                      },
                      "zone": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "deviceType": "dimmer",
                      "zone": "zone",
                      "name": "name",
                      "id": "id",
                      "deviceId": 0
                    }
                  }
                },
                "zoneStatus": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "lastUpdate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "level": {
                        "type": "integer"
                      }
                    },
                    "description": "the status of the lighting zone.",
                    "example": {
                      "level": 6,
                      "lastUpdate": "2000-01-23T04:56:07.000+00:00",
                      "name": "name",
                      "id": "id"
                    }
                  }
                }
              },
              "description": "ok"
            }

## Group Environment

### /temperature

#### GET

+ Request (application/json)

    + Headers
            
            Accept: application/json

+ Response 200 (application/json;charset=utf-8)

    ok

    + Body

            {
              "zoneStatus": [
                {
                  "name": "name",
                  "id": "id",
                  "units": "fahrenheit",
                  "value": 5.962133916683182,
                  "timestamp": "2000-01-23T04:56:07.000+00:00"
                },
                {
                  "name": "name",
                  "id": "id",
                  "units": "fahrenheit",
                  "value": 5.962133916683182,
                  "timestamp": "2000-01-23T04:56:07.000+00:00"
                }
              ],
              "zones": [
                {
                  "inputPosition": 6,
                  "outputPosition": 1,
                  "zone": "zone",
                  "name": "name",
                  "id": 0
                },
                {
                  "inputPosition": 6,
                  "outputPosition": 1,
                  "zone": "zone",
                  "name": "name",
                  "id": 0
                }
              ]
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "zones": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "the unique identifier for the zone"
                      },
                      "name": {
                        "type": "string"
                      },
                      "inputPosition": {
                        "type": "integer"
                      },
                      "outputPosition": {
                        "type": "integer"
                      },
                      "zone": {
                        "type": "string"
                      }
                    },
                    "description": "a single temperature zone",
                    "example": {
                      "inputPosition": 6,
                      "outputPosition": 1,
                      "zone": "zone",
                      "name": "name",
                      "id": 0
                    }
                  }
                },
                "zoneStatus": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "timestamp",
                      "value"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "the unique identifier for the zone"
                      },
                      "name": {
                        "type": "string",
                        "description": "the name of the zone"
                      },
                      "value": {
                        "type": "number",
                        "format": "double",
                        "description": "the temperature in the zone"
                      },
                      "units": {
                        "type": "string",
                        "description": "the temperature units",
                        "default": "fahrenheit",
                        "enum": [
                          "celcius",
                          "fahrenheit"
                        ]
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "the timestamp when the temperature was measured"
                      }
                    },
                    "description": "status of a single zone",
                    "example": {
                      "name": "name",
                      "id": "id",
                      "units": "fahrenheit",
                      "value": 5.962133916683182,
                      "timestamp": "2000-01-23T04:56:07.000+00:00"
                    }
                  }
                }
              },
              "description": "ok"
            }

### /temperature/forecast/{days}

#### GET

+ Parameters

    + days: 7 (required)

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

+ Response 200 (application/json;charset=utf-8)

    the forecast

    + Body

            {
              "city": {
                "country": "country",
                "name": "name",
                "lon": 1.4658129805029452,
                "id": 0,
                "lat": 6.027456183070403
              },
              "values": [
                {
                  "date": "2000-01-23T04:56:07.000+00:00",
                  "temperature": {
                    "high": 3.616076749251911,
                    "low": 9.301444243932576,
                    "night": 1.2315135367772556,
                    "evening": 7.386281948385884,
                    "day": 4.145608029883936,
                    "morning": 2.027123023002322
                  },
                  "weather": {
                    "summary": "summary",
                    "icon": "icon",
                    "description": "description"
                  },
                  "humidity": 5,
                  "pressure": 5.962133916683182,
                  "clouds": 7,
                  "windSpeed": 2.3021358869347655
                },
                {
                  "date": "2000-01-23T04:56:07.000+00:00",
                  "temperature": {
                    "high": 3.616076749251911,
                    "low": 9.301444243932576,
                    "night": 1.2315135367772556,
                    "evening": 7.386281948385884,
                    "day": 4.145608029883936,
                    "morning": 2.027123023002322
                  },
                  "weather": {
                    "summary": "summary",
                    "icon": "icon",
                    "description": "description"
                  },
                  "humidity": 5,
                  "pressure": 5.962133916683182,
                  "clouds": 7,
                  "windSpeed": 2.3021358869347655
                }
              ]
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "city": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    },
                    "lat": {
                      "type": "number",
                      "format": "double"
                    },
                    "lon": {
                      "type": "number",
                      "format": "double"
                    },
                    "country": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "country": "country",
                    "name": "name",
                    "lon": 1.4658129805029452,
                    "id": 0,
                    "lat": 6.027456183070403
                  }
                },
                "values": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "pressure": {
                        "type": "number",
                        "format": "double"
                      },
                      "humidity": {
                        "type": "integer"
                      },
                      "windSpeed": {
                        "type": "number",
                        "format": "double"
                      },
                      "clouds": {
                        "type": "integer"
                      },
                      "temperature": {
                        "type": "object",
                        "properties": {
                          "low": {
                            "type": "number",
                            "format": "double"
                          },
                          "high": {
                            "type": "number",
                            "format": "double"
                          },
                          "morning": {
                            "type": "number",
                            "format": "double"
                          },
                          "day": {
                            "type": "number",
                            "format": "double"
                          },
                          "evening": {
                            "type": "number",
                            "format": "double"
                          },
                          "night": {
                            "type": "number",
                            "format": "double"
                          }
                        },
                        "example": {
                          "high": 3.616076749251911,
                          "low": 9.301444243932576,
                          "night": 1.2315135367772556,
                          "evening": 7.386281948385884,
                          "day": 4.145608029883936,
                          "morning": 2.027123023002322
                        }
                      },
                      "weather": {
                        "type": "object",
                        "properties": {
                          "summary": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "icon": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "summary": "summary",
                          "icon": "icon",
                          "description": "description"
                        }
                      }
                    },
                    "example": {
                      "date": "2000-01-23T04:56:07.000+00:00",
                      "temperature": {
                        "high": 3.616076749251911,
                        "low": 9.301444243932576,
                        "night": 1.2315135367772556,
                        "evening": 7.386281948385884,
                        "day": 4.145608029883936,
                        "morning": 2.027123023002322
                      },
                      "weather": {
                        "summary": "summary",
                        "icon": "icon",
                        "description": "description"
                      },
                      "humidity": 5,
                      "pressure": 5.962133916683182,
                      "clouds": 7,
                      "windSpeed": 2.3021358869347655
                    }
                  }
                }
              }
            }

### /temperature/{zoneId}

#### GET

+ Parameters

    + zoneId: living-room (required)

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

+ Response 200 (application/json;charset=utf-8)

    Zone temperature

    + Body

            {
              "name": "name",
              "id": "id",
              "units": "fahrenheit",
              "value": 5.962133916683182,
              "timestamp": "2000-01-23T04:56:07.000+00:00"
            }

    + Schema

            {
              "type": "object",
              "required": [
                "id",
                "timestamp",
                "value"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "the unique identifier for the zone"
                },
                "name": {
                  "type": "string",
                  "description": "the name of the zone"
                },
                "value": {
                  "type": "number",
                  "format": "double",
                  "description": "the temperature in the zone"
                },
                "units": {
                  "type": "string",
                  "description": "the temperature units",
                  "default": "fahrenheit",
                  "enum": [
                    "celcius",
                    "fahrenheit"
                  ]
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "the timestamp when the temperature was measured"
                }
              },
              "description": "status of a single zone"
            }

### /temperature/{zoneId}/heater

#### GET

gets the state of the heater

+ Parameters

    + zoneId: patio (required)

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

+ Response 200 (application/json;charset=utf-8)

    heater state

    + Body

            {
              "id": "id",
              "state": "state"
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                }
              }
            }

### /temperature/{zoneId}/heater/{state}

#### POST

turns the heater on or off

+ Parameters

    + zoneId: kitchen (required)

    + state: false,true (required)

+ Request (application/json)

    + Headers

            Accept: application/json

    + Body

+ Response 200 (application/json;charset=utf-8)

    + Body